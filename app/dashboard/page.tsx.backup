'use client';

import { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import {
  TrendingUp,
  TrendingDown,
  Users,
  DollarSign,
  ShoppingCart,
  Calendar,
  Clock,
  Star,
  Activity,
  BarChart3,
  PieChart,
  ArrowUpRight,
  ArrowDownRight,
  Filter,
  Download,
  Search,
  Bell,
  Settings,
  MapPin,
  Utensils,
  CheckCircle2,
  XCircle,
  AlertCircle,
  Zap,
  Target,
  TrendingUpIcon,
  Sparkles,
  Brain,
  MessageSquare,
  ThumbsUp,
  ThumbsDown,
  CreditCard,
  Wallet,
  TrendingDownIcon,
  RefreshCw,
  Eye,
  UserCheck,
  UserPlus,
  UserX,
  Send,
  Gift,
  Megaphone,
  LineChart,
  Package,
  Ticket,
  CalendarCheck,
  CalendarX,
  CalendarClock,
  Percent,
  TicketCheck,
  QrCode,
  Share2,
  Edit,
  Trash2,
  MoreVertical,
  Phone,
  Mail,
  StickyNote,
} from 'lucide-react';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import {
  Tabs,
  TabsList,
  TabsTrigger,
  TabsContent,
} from '@/components/ui/tabs';
import { Progress } from '@/components/ui/progress';
import { Separator } from '@/components/ui/separator';
import {
  LineChart as RechartsLineChart,
  Line,
  AreaChart,
  Area,
  BarChart,
  Bar,
  PieChart as RechartsPieChart,
  Pie,
  Cell,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
  Legend,
  RadarChart,
  PolarGrid,
  PolarAngleAxis,
  PolarRadiusAxis,
  Radar,
  ComposedChart,
} from 'recharts';

export function AdminDashboardPage() {
  const [activeTab, setActiveTab] = useState('overview');
  const [currentTime, setCurrentTime] = useState(new Date());
  const [alerts, setAlerts] = useState([
    {
      id: 1,
      type: 'warning',
      message: 'โต๊ะเต็ม 95% ควรเตรียมรับลูกค้า walk-in',
      time: '2 นาทีที่แล้ว',
      action: 'ดูรายละเอียด',
    },
    {
      id: 2,
      type: 'success',
      message: 'ยอดขายวันนี้ทะลุเป้า 120%!',
      time: '15 นาทีที่แล้ว',
      action: 'ดูกราฟ',
    },
    {
      id: 3,
      type: 'info',
      message: 'ลูกค้า VIP 3 คน มีการจองในเย็นนี้',
      time: '30 นาทีที่แล้ว',
      action: 'เตรียมโต๊ะพิเศษ',
    },
  ]);

  // Update time every second
  useEffect(() => {
    const timer = setInterval(() => setCurrentTime(new Date()), 1000);
    return () => clearInterval(timer);
  }, []);

  // Sample data
  const revenueData = [
    {
      month: 'ม.ค.',
      จองโต๊ะ: 85000,
      คอนเสิร์ต: 120000,
      อาหาร: 95000,
      target: 250000,
    },
    {
      month: 'ก.พ.',
      จองโต๊ะ: 95000,
      คอนเสิร์ต: 135000,
      อาหาร: 105000,
      target: 270000,
    },
    {
      month: 'มี.ค.',
      จองโต๊ะ: 110000,
      คอนเสิร์ต: 150000,
      อาหาร: 115000,
      target: 300000,
    },
    {
      month: 'เม.ย.',
      จองโต๊ะ: 125000,
      คอนเสิร์ต: 165000,
      อาหาร: 125000,
      target: 350000,
    },
    {
      month: 'พ.ค.',
      จองโต๊ะ: 140000,
      คอนเสิร์ต: 180000,
      อาหาร: 135000,
      target: 380000,
    },
    {
      month: 'มิ.ย.',
      จองโต๊ะ: 155000,
      คอนเสิร์ต: 195000,
      อาหาร: 145000,
      target: 420000,
    },
    {
      month: 'ก.ค.',
      จองโต๊ะ: 165000,
      คอนเสิร์ต: 205000,
      อาหาร: 152000,
      target: 450000,
    },
  ];

  const categoryData = [
    { name: 'บัตรคอนเสิร์ต', value: 543000, color: '#A63FFF' },
    { name: 'อาหาร', value: 437000, color: '#D91DCC' },
    { name: 'เครื่องดื่ม', value: 316000, color: '#7C3AED' },
    { name: 'อื่นๆ', value: 254000, color: '#EC4899' },
  ];

  const hourlyData = [
    { time: '08:00', customers: 45, orders: 32, revenue: 28500 },
    { time: '09:00', customers: 65, orders: 48, revenue: 42300 },
    { time: '10:00', customers: 82, orders: 61, revenue: 54200 },
    { time: '11:00', customers: 95, orders: 72, revenue: 68900 },
    { time: '12:00', customers: 125, orders: 95, revenue: 92500 },
    { time: '13:00', customers: 135, orders: 102, revenue: 98700 },
    { time: '14:00', customers: 118, orders: 89, revenue: 76500 },
    { time: '15:00', customers: 95, orders: 71, revenue: 61200 },
    { time: '16:00', customers: 108, orders: 82, revenue: 72800 },
    { time: '17:00', customers: 142, orders: 108, revenue: 95600 },
  ];

  const customerSegmentation = [
    { segment: 'VIP ลูกค้าประจำ', ทั้งหมด: 85, ลูกค้าประจำ: 85, ltv: 157250 },
    { segment: 'ลูกค้าปกติ', ทั้งหมด: 245, ลูกค้าประจำ: 125, ltv: 45600 },
    { segment: 'ลูกค้าใหม่', ทั้งหมด: 420, ลูกค้าประจำ: 65, ltv: 12800 },
    { segment: 'ลูกค้ากลุ่ม', ทั้งหมด: 180, ลูกค้าประจำ: 140, ltv: 89500 },
    { segment: 'ลูกค้าพิเศษ', ทั้งหมด: 150, ลูกค้าประจำ: 120, ltv: 125000 },
  ];

  const sentimentData = [
    { subject: 'บริการ', score: 85, fullMark: 100 },
    { subject: 'คุณภาพอาหาร', score: 92, fullMark: 100 },
    { subject: 'ความสะอาด', score: 88, fullMark: 100 },
    { subject: 'ความรวดเร็ว', score: 78, fullMark: 100 },
    { subject: 'ราคา', score: 82, fullMark: 100 },
    { subject: 'บรรยากาศ', score: 90, fullMark: 100 },
  ];

  const peakHours = [
    {
      time: '11:00-12:00',
      revenue: 85900,
      capacity: 92,
      orders: 72,
      avgWait: 8,
    },
    {
      time: '12:00-13:00',
      revenue: 92500,
      capacity: 101,
      orders: 95,
      avgWait: 15,
    },
    {
      time: '18:00-19:00',
      revenue: 87800,
      capacity: 94,
      orders: 82,
      avgWait: 10,
    },
  ];

  const topProducts = [
    {
      name: 'VIP Table (4 ที่นั่ง)',
      quantity: 45,
      revenue: 81850,
      ltv: 157250,
      trend: '+24%',
    },
    {
      name: 'Steak Premium Set',
      quantity: 128,
      revenue: 115200,
      ltv: 950,
      trend: '+18%',
    },
    {
      name: 'Concert VIP Pass',
      quantity: 89,
      revenue: 267000,
      ltv: 3000,
      trend: '+35%',
    },
  ];

  const stats = [
    {
      title: 'รายได้วันนี้',
      value: '฿1,388K',
      change: '+24.5%',
      trend: 'up',
      icon: DollarSign,
      color: 'from-[#A63FFF] to-[#D91DCC]',
      badge: 'Target: ฿1.2M',
      target: 1200000,
      actual: 1388000,
    },
    {
      title: 'ยอดขาย',
      value: '1,680',
      change: '+18.2%',
      trend: 'up',
      icon: ShoppingCart,
      color: 'from-[#D91DCC] to-[#A63FFF]',
      badge: 'เป้า: 1,500',
      target: 1500,
      actual: 1680,
    },
    {
      title: 'จำนวนลูกค้า',
      value: '2,847',
      change: '+17.8%',
      trend: 'up',
      icon: Users,
      color: 'from-[#7C3AED] to-[#A63FFF]',
      badge: 'Active: 187',
      target: 2500,
      actual: 2847,
    },
    {
      title: 'คะแนนความพึงพอใจ',
      value: '4.8 ⭐',
      change: '+0.5',
      trend: 'up',
      icon: Star,
      color: 'from-[#EC4899] to-[#D91DCC]',
      badge: '556 รีวิว',
      target: 4.5,
      actual: 4.8,
    },
  ];

  const metrics = [
    {
      label: 'รายได้วันนี้',
      value: '฿45,670',
      change: '+8.2%',
      period: 'จาก ฿42,350 เมื่อวาน',
      trend: 'up',
      icon: DollarSign,
      color: '#A63FFF',
    },
    {
      label: 'ออเดอร์ Active',
      value: '23',
      change: '+17.6%',
      period: 'จาก 19 เมื่อวา��นี้',
      trend: 'up',
      icon: ShoppingCart,
      color: '#D91DCC',
    },
    {
      label: 'ลูกค้าวันนี้',
      value: '187',
      change: '+13.3%',
      period: 'จาก 165 เมื่อวานนี้',
      trend: 'up',
      icon: Users,
      color: '#7C3AED',
    },
    {
      label: 'โต๊ะว่าง',
      value: '8/32',
      change: '+60.1%',
      period: '25% ความจุ',
      trend: 'up',
      icon: Activity,
      color: '#EC4899',
    },
  ];

  const analyticsMetrics = [
    {
      label: 'Repeat Customer Rate',
      value: '42.8%',
      change: '+5.2%',
      period: 'จาก 37.6% เดือนก่อน',
      badge: '+42.5%',
      color: '#A63FFF',
    },
    {
      label: 'Average Rating',
      value: '4.7/5.0',
      change: '+0.3',
      period: 'จาก 4.4/5.0',
      badge: '4.3',
      color: '#D91DCC',
    },
    {
      label: 'Average Order Value',
      value: '฿850',
      change: '+18.2%',
      period: 'จาก ฿719 รายการเฉลี่ย',
      badge: '+18.2%',
      color: '#7C3AED',
    },
    {
      label: 'Average Wait Time',
      value: '9.8 นาที',
      change: '-2.1 min',
      period: 'ลดลง 20% จากเดือนที่แล้ว',
      badge: '-2.1 min',
      color: '#EC4899',
    },
  ];

  // Live Operations Data
  const tables = [
    {
      id: 1,
      status: 'occupied',
      zone: 'VIP',
      capacity: 4,
      currentGuests: 4,
      order: '฿3,850',
      time: '45 นาที',
      waiter: 'สมชาย',
    },
    {
      id: 2,
      status: 'available',
      zone: 'VIP',
      capacity: 4,
      currentGuests: 0,
      order: '-',
      time: '-',
      waiter: '-',
    },
    {
      id: 3,
      status: 'reserved',
      zone: 'VIP',
      capacity: 6,
      currentGuests: 0,
      order: '-',
      time: '18:30',
      waiter: 'สมหญิง',
    },
    {
      id: 4,
      status: 'occupied',
      zone: 'Main',
      capacity: 2,
      currentGuests: 2,
      order: '฿1,250',
      time: '20 นาที',
      waiter: 'วิชัย',
    },
    {
      id: 5,
      status: 'occupied',
      zone: 'Main',
      capacity: 4,
      currentGuests: 3,
      order: '฿2,100',
      time: '35 นาที',
      waiter: 'สมชาย',
    },
    {
      id: 6,
      status: 'available',
      zone: 'Main',
      capacity: 2,
      currentGuests: 0,
      order: '-',
      time: '-',
      waiter: '-',
    },
    {
      id: 7,
      status: 'cleaning',
      zone: 'Main',
      capacity: 4,
      currentGuests: 0,
      order: '-',
      time: '5 นาที',
      waiter: 'แม่บ้าน',
    },
    {
      id: 8,
      status: 'occupied',
      zone: 'Outdoor',
      capacity: 2,
      currentGuests: 2,
      order: '฿950',
      time: '15 นาที',
      waiter: 'วิชัย',
    },
  ];

  const activeOrders = [
    {
      id: '#1234',
      table: 'T-01',
      items: ['Steak Premium', 'Pasta Carbonara', 'Red Wine'],
      status: 'cooking',
      time: '12 นาที',
      priority: 'high',
    },
    {
      id: '#1235',
      table: 'T-04',
      items: ['Caesar Salad', 'Pizza Margherita'],
      status: 'ready',
      time: '2 นาที',
      priority: 'urgent',
    },
    {
      id: '#1236',
      table: 'T-05',
      items: ['Tom Yum Kung', 'Pad Thai', 'Iced Tea x2'],
      status: 'cooking',
      time: '8 นาที',
      priority: 'normal',
    },
    {
      id: '#1237',
      table: 'T-08',
      items: ['Burger Set', 'French Fries'],
      status: 'pending',
      time: '0 นาที',
      priority: 'normal',
    },
  ];

  const aiRecommendations = [
    {
      type: 'revenue',
      title: 'เพิ่มรายได้ช่วง Off-peak',
      description:
        'ช่วง 14:00-16:00 มีโต๊ะว่าง 60% แนะนำให้ส่วนลด 20% เพื่อดึงลูกค้า',
      action: 'สร้างโปรโมชั่น',
      impact: '+฿15,000/เดือน',
      icon: TrendingUpIcon,
      color: '#A63FFF',
    },
    {
      type: 'customer',
      title: 'ลูกค้า At-risk 23 คน',
      description: 'ลูกค้าประจำที่ไม่มาเกิน 30 วัน ส่งคูปองพิเศษเพื่อดึงกลับมา',
      action: 'ส่ง Win-back Campaign',
      impact: '฿45,000 CLV',
      icon: UserX,
      color: '#D91DCC',
    },
    {
      type: 'menu',
      title: 'ปรับราคา Menu Bestseller',
      description: 'Steak Premium ขายดีแต่กำไรต่ำ แนะนำขึ้นราคา +10%',
      action: 'อัปเดตเมนู',
      impact: '+฿8,500/เดือน',
      icon: Utensils,
      color: '#7C3AED',
    },
    {
      type: 'staff',
      title: 'จัดกะพนักงานให้เหมาะสม',
      description: 'ช่วง 12:00-13:00 ต้องการพนักงานเพิ่ม 2 คน',
      action: 'ปรับตารางกะ',
      impact: 'ลด Wait Time 30%',
      icon: Users,
      color: '#EC4899',
    },
  ];

  const campaigns = [
    {
      name: 'Happy Hour 14:00-16:00',
      type: 'ส่วนลด',
      status: 'active',
      budget: '฿50,000',
      spent: '฿32,500',
      revenue: '฿145,000',
      roi: '346%',
      conversions: 234,
      impressions: 12500,
    },
    {
      name: 'Birthday Special 20% Off',
      type: 'อีเมล',
      status: 'active',
      budget: '฿20,000',
      spent: '฿18,200',
      revenue: '฿89,500',
      roi: '392%',
      conversions: 156,
      impressions: 8900,
    },
    {
      name: 'Referral Program',
      type: 'อื่นๆ',
      status: 'active',
      budget: '฿30,000',
      spent: '฿25,000',
      revenue: '฿178,000',
      roi: '612%',
      conversions: 89,
      impressions: 4500,
    },
  ];

  const financialData = [
    { category: 'รายได้รวม', amount: 1388000, type: 'income', percentage: 100 },
    {
      category: 'ต้นทุนอาหาร',
      amount: -416400,
      type: 'expense',
      percentage: 30,
    },
    {
      category: 'ค่าแรงพนักงาน',
      amount: -277600,
      type: 'expense',
      percentage: 20,
    },
    { category: 'ค่าเช่า', amount: -138800, type: 'expense', percentage: 10 },
    { category: 'ค่าน้ำ-ไฟ', amount: -69400, type: 'expense', percentage: 5 },
    { category: 'การตลาด', amount: -97160, type: 'expense', percentage: 7 },
    { category: 'อื่นๆ', amount: -55520, type: 'expense', percentage: 4 },
    { category: 'กำไรสุทธิ', amount: 333120, type: 'profit', percentage: 24 },
  ];

  // Booking System Data
  const bookings = [
    {
      id: 'BK-001',
      customerName: 'คุณสมชาย ใจดี',
      phone: '081-234-5678',
      email: 'somchai@email.com',
      date: '2024-10-16',
      time: '18:30',
      guests: 4,
      table: 'VIP-01',
      zone: 'VIP',
      status: 'confirmed',
      price: 2500,
      deposit: 1000,
      notes: 'วันเกิด - เตรียมเค้ก',
      createdAt: '2024-10-10 14:30',
    },
    {
      id: 'BK-002',
      customerName: 'คุณสมหญิง สวยงาม',
      phone: '082-345-6789',
      email: 'somying@email.com',
      date: '2024-10-16',
      time: '19:00',
      guests: 2,
      table: 'A-05',
      zone: 'Main',
      status: 'pending',
      price: 1200,
      deposit: 0,
      notes: '',
      createdAt: '2024-10-15 10:15',
    },
    {
      id: 'BK-003',
      customerName: 'คุณวิชัย รวยมาก',
      phone: '083-456-7890',
      email: 'wichai@email.com',
      date: '2024-10-16',
      time: '20:00',
      guests: 6,
      table: 'VIP-02',
      zone: 'VIP',
      status: 'confirmed',
      price: 5000,
      deposit: 2500,
      notes: 'ประชุมธุรกิจ - ต้องการความเป็นส่วนตัว',
      createdAt: '2024-10-12 16:45',
    },
    {
      id: 'BK-004',
      customerName: 'คุณมานี มีเงิน',
      phone: '084-567-8901',
      email: 'manee@email.com',
      date: '2024-10-17',
      time: '12:00',
      guests: 8,
      table: 'B-10',
      zone: 'Main',
      status: 'confirmed',
      price: 3800,
      deposit: 1500,
      notes: 'มื้อกลางวัน - มีเด็กเล็ก',
      createdAt: '2024-10-14 09:20',
    },
    {
      id: 'BK-005',
      customerName: 'คุณประยุทธ์ ทำงาน',
      phone: '085-678-9012',
      email: 'prayut@email.com',
      date: '2024-10-17',
      time: '18:00',
      guests: 4,
      table: 'C-03',
      zone: 'Outdoor',
      status: 'cancelled',
      price: 1800,
      deposit: 0,
      notes: 'ยกเลิกเนื่องจากติดธุระ',
      createdAt: '2024-10-13 11:30',
    },
  ];

  const bookingStats = {
    today: {
      total: 24,
      confirmed: 18,
      pending: 4,
      cancelled: 2,
      revenue: 45600,
    },
    thisWeek: {
      total: 156,
      confirmed: 128,
      pending: 18,
      cancelled: 10,
      revenue: 325000,
    },
    thisMonth: {
      total: 642,
      confirmed: 548,
      pending: 52,
      cancelled: 42,
      revenue: 1350000,
    },
  };

  // Ticket Sales Data
  const tickets = [
    {
      id: 'TKT-001',
      eventName: 'Jazz Night Live',
      eventDate: '2024-10-25',
      eventTime: '20:00',
      ticketType: 'VIP',
      price: 3000,
      quantity: 50,
      sold: 48,
      available: 2,
      revenue: 144000,
      status: 'selling',
    },
    {
      id: 'TKT-002',
      eventName: 'Jazz Night Live',
      eventDate: '2024-10-25',
      eventTime: '20:00',
      ticketType: 'Regular',
      price: 1500,
      quantity: 200,
      sold: 165,
      available: 35,
      revenue: 247500,
      status: 'selling',
    },
    {
      id: 'TKT-003',
      eventName: 'Rock Concert 2024',
      eventDate: '2024-11-05',
      eventTime: '19:00',
      ticketType: 'Early Bird',
      price: 2000,
      quantity: 100,
      sold: 100,
      available: 0,
      revenue: 200000,
      status: 'sold-out',
    },
    {
      id: 'TKT-004',
      eventName: 'Rock Concert 2024',
      eventDate: '2024-11-05',
      eventTime: '19:00',
      ticketType: 'VIP',
      price: 4000,
      quantity: 80,
      sold: 72,
      available: 8,
      revenue: 288000,
      status: 'selling',
    },
    {
      id: 'TKT-005',
      eventName: 'Acoustic Evening',
      eventDate: '2024-10-30',
      eventTime: '18:30',
      ticketType: 'General',
      price: 1200,
      quantity: 150,
      sold: 89,
      available: 61,
      revenue: 106800,
      status: 'selling',
    },
  ];

  const ticketSales = [
    {
      id: 'TS-001',
      ticketId: 'TKT-001',
      customerName: 'คุณนภา ชอบเพลง',
      phone: '086-123-4567',
      email: 'napa@email.com',
      eventName: 'Jazz Night Live',
      ticketType: 'VIP',
      quantity: 2,
      price: 3000,
      total: 6000,
      status: 'paid',
      paymentMethod: 'QR PromptPay',
      purchaseDate: '2024-10-15 14:25',
      transferable: true,
    },
    {
      id: 'TS-002',
      ticketId: 'TKT-002',
      customerName: 'คุณสุรชัย รักดนตรี',
      phone: '087-234-5678',
      email: 'surachai@email.com',
      eventName: 'Jazz Night Live',
      ticketType: 'Regular',
      quantity: 4,
      price: 1500,
      total: 6000,
      status: 'paid',
      paymentMethod: 'บัตรเครดิต',
      purchaseDate: '2024-10-14 09:15',
      transferable: true,
    },
    {
      id: 'TS-003',
      ticketId: 'TKT-004',
      customerName: 'คุณวรรณา ดนตรีเพราะ',
      phone: '088-345-6789',
      email: 'wanna@email.com',
      eventName: 'Rock Concert 2024',
      ticketType: 'VIP',
      quantity: 2,
      price: 4000,
      total: 8000,
      status: 'pending',
      paymentMethod: 'โอนธนาคาร',
      purchaseDate: '2024-10-15 16:40',
      transferable: false,
    },
  ];

  const ticketStats = {
    today: {
      sold: 45,
      revenue: 89500,
      pending: 8,
    },
    thisWeek: {
      sold: 312,
      revenue: 645000,
      pending: 23,
    },
    thisMonth: {
      sold: 1247,
      revenue: 2856000,
      pending: 56,
    },
    total: {
      events: 8,
      activeEvents: 5,
      soldOut: 2,
      totalTickets: 1580,
      soldTickets: 1247,
      availableTickets: 333,
    },
  };

  const getTableColor = (status: string) => {
    switch (status) {
      case 'occupied':
        return 'bg-red-500/20 border-red-500/50';
      case 'available':
        return 'bg-green-500/20 border-green-500/50';
      case 'reserved':
        return 'bg-blue-500/20 border-blue-500/50';
      case 'cleaning':
        return 'bg-yellow-500/20 border-yellow-500/50';
      default:
        return 'bg-white/5 border-white/10';
    }
  };

  const getOrderStatusColor = (status: string) => {
    switch (status) {
      case 'pending':
        return 'bg-yellow-500/20 text-yellow-400';
      case 'cooking':
        return 'bg-blue-500/20 text-blue-400';
      case 'ready':
        return 'bg-green-500/20 text-green-400';
      default:
        return 'bg-white/5 text-white/60';
    }
  };

  const getPriorityColor = (priority: string) => {
    switch (priority) {
      case 'urgent':
        return 'bg-red-500/20 text-red-400';
      case 'high':
        return 'bg-orange-500/20 text-orange-400';
      case 'normal':
        return 'bg-white/5 text-white/60';
      default:
        return 'bg-white/5 text-white/60';
    }
  };

  const getBookingStatusColor = (status: string) => {
    switch (status) {
      case 'confirmed':
        return 'bg-green-500/20 text-green-400 border-green-500/30';
      case 'pending':
        return 'bg-yellow-500/20 text-yellow-400 border-yellow-500/30';
      case 'cancelled':
        return 'bg-red-500/20 text-red-400 border-red-500/30';
      case 'completed':
        return 'bg-blue-500/20 text-blue-400 border-blue-500/30';
      default:
        return 'bg-white/5 text-white/60 border-white/10';
    }
  };

  const getTicketStatusColor = (status: string) => {
    switch (status) {
      case 'selling':
        return 'bg-green-500/20 text-green-400 border-green-500/30';
      case 'sold-out':
        return 'bg-red-500/20 text-red-400 border-red-500/30';
      case 'pending':
        return 'bg-yellow-500/20 text-yellow-400 border-yellow-500/30';
      case 'paid':
        return 'bg-blue-500/20 text-blue-400 border-blue-500/30';
      default:
        return 'bg-white/5 text-white/60 border-white/10';
    }
  };

  return (
    <div className="min-h-screen bg-black py-20">
      {/* Header */}
      <div className="container mx-auto px-4 mb-8">
        <div className="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4">
          <div>
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              className="flex items-center gap-3 mb-2"
            >
              <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-[#A63FFF] to-[#D91DCC] flex items-center justify-center">
                <BarChart3 className="w-6 h-6 text-white" />
              </div>
              <div>
                <h1 className="text-3xl md:text-4xl bg-gradient-to-r from-[#A63FFF] to-[#D91DCC] bg-clip-text text-transparent">
                  Executive Dashboard
                </h1>
                <p className="text-sm text-white/60">
                  Real-time Analytics & AI-Powered Insights •{' '}
                  {currentTime.toLocaleTimeString('th-TH')}
                </p>
              </div>
            </motion.div>
          </div>

          <div className="flex flex-wrap items-center gap-3">
            <Button
              variant="outline"
              className="border-white/10 hover:bg-white/5 gap-2"
            >
              <Download className="w-4 h-4" />
              ส่งออกรายงาน
            </Button>
            <Button
              variant="outline"
              className="border-white/10 hover:bg-white/5 gap-2"
            >
              <Filter className="w-4 h-4" />
              ตัวกรอง
            </Button>
            <Button className="bg-gradient-to-r from-[#A63FFF] to-[#D91DCC] hover:opacity-90 gap-2 relative">
              <Bell className="w-4 h-4" />
              การแจ้งเตือน
              <Badge className="absolute -top-1 -right-1 w-5 h-5 rounded-full bg-red-500 text-white text-xs flex items-center justify-center p-0">
                {alerts.length}
              </Badge>
            </Button>
          </div>
        </div>

        {/* Alert Banner */}
        <AnimatePresence>
          {alerts.length > 0 && (
            <motion.div
              initial={{ opacity: 0, y: -20 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -20 }}
              className="mt-6 space-y-2"
            >
              {alerts.slice(0, 2).map(alert => (
                <Card
                  key={alert.id}
                  className={`p-4 border ${
                    alert.type === 'warning'
                      ? 'bg-yellow-500/10 border-yellow-500/30'
                      : alert.type === 'success'
                      ? 'bg-green-500/10 border-green-500/30'
                      : 'bg-blue-500/10 border-blue-500/30'
                  } backdrop-blur-xl`}
                >
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-3">
                      {alert.type === 'warning' && (
                        <AlertCircle className="w-5 h-5 text-yellow-400" />
                      )}
                      {alert.type === 'success' && (
                        <CheckCircle2 className="w-5 h-5 text-green-400" />
                      )}
                      {alert.type === 'info' && (
                        <Sparkles className="w-5 h-5 text-blue-400" />
                      )}
                      <div>
                        <p className="text-sm">{alert.message}</p>
                        <p className="text-xs text-white/40">{alert.time}</p>
                      </div>
                    </div>
                    <Button
                      size="sm"
                      variant="outline"
                      className="border-white/20"
                    >
                      {alert.action}
                    </Button>
                  </div>
                </Card>
              ))}
            </motion.div>
          )}
        </AnimatePresence>

        {/* Tabs */}
        <Tabs value={activeTab} onValueChange={setActiveTab} className="mt-6">
          <TabsList className="bg-white/5 border border-white/10">
            <TabsTrigger value="overview">Overview</TabsTrigger>
            <TabsTrigger value="realtime">Real-time</TabsTrigger>
            <TabsTrigger value="analytics">Analytics</TabsTrigger>
            <TabsTrigger value="operations">Live Operations</TabsTrigger>
            <TabsTrigger value="customers">Customers</TabsTrigger>
            <TabsTrigger value="financial">Financial</TabsTrigger>
            <TabsTrigger value="marketing">Marketing</TabsTrigger>
            <TabsTrigger value="bookings">Bookings</TabsTrigger>
            <TabsTrigger value="tickets">Tickets</TabsTrigger>
            <TabsTrigger value="ai">AI Insights</TabsTrigger>
          </TabsList>

          {/* Overview Tab */}
          <TabsContent value="overview" className="mt-8 space-y-6">
            {/* Stats Grid */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {stats.map((stat, index) => {
                const Icon = stat.icon;
                const progress = (stat.actual / stat.target) * 100;
                return (
                  <motion.div
                    key={stat.title}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: index * 0.1 }}
                  >
                    <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6 hover:bg-white/10 transition-all group">
                      <div className="flex items-start justify-between mb-4">
                        <div
                          className={`w-12 h-12 rounded-xl bg-gradient-to-br ${stat.color} flex items-center justify-center group-hover:scale-110 transition-transform`}
                        >
                          <Icon className="w-6 h-6 text-white" />
                        </div>
                        <Badge
                          className={`bg-gradient-to-r ${stat.color} bg-opacity-20 text-white border-0`}
                        >
                          {stat.trend === 'up' ? (
                            <TrendingUp className="w-3 h-3 mr-1" />
                          ) : (
                            <TrendingDown className="w-3 h-3 mr-1" />
                          )}
                          {stat.change}
                        </Badge>
                      </div>
                      <div>
                        <p className="text-sm text-white/60 mb-1">
                          {stat.title}
                        </p>
                        <p className="text-3xl mb-2">{stat.value}</p>
                        <div className="space-y-2">
                          <Progress value={progress} className="h-1.5" />
                          <p className="text-xs text-white/40">{stat.badge}</p>
                        </div>
                      </div>
                    </Card>
                  </motion.div>
                );
              })}
            </div>

            {/* Charts Grid */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              {/* Revenue Chart with Target */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center justify-between mb-6">
                  <div>
                    <h3 className="text-lg mb-1">กราฟยอดขาย vs เป้าหมาย</h3>
                    <p className="text-sm text-white/60">
                      เปรียบเทียบยอดขายจริงกับเป้า
                    </p>
                  </div>
                  <Button
                    variant="outline"
                    size="sm"
                    className="border-white/10"
                  >
                    <Eye className="w-4 h-4 mr-2" />
                    ดูข้อมูล
                  </Button>
                </div>
                <ResponsiveContainer width="100%" height={300}>
                  <ComposedChart data={revenueData}>
                    <defs>
                      <linearGradient
                        id="colorBooking"
                        x1="0"
                        y1="0"
                        x2="0"
                        y2="1"
                      >
                        <stop
                          offset="5%"
                          stopColor="#A63FFF"
                          stopOpacity={0.3}
                        />
                        <stop
                          offset="95%"
                          stopColor="#A63FFF"
                          stopOpacity={0}
                        />
                      </linearGradient>
                    </defs>
                    <CartesianGrid
                      strokeDasharray="3 3"
                      stroke="rgba(255,255,255,0.1)"
                    />
                    <XAxis dataKey="month" stroke="rgba(255,255,255,0.5)" />
                    <YAxis stroke="rgba(255,255,255,0.5)" />
                    <Tooltip
                      contentStyle={{
                        backgroundColor: 'rgba(0,0,0,0.9)',
                        border: '1px solid rgba(255,255,255,0.1)',
                        borderRadius: '8px',
                      }}
                    />
                    <Legend />
                    <Area
                      type="monotone"
                      dataKey="จองโต๊ะ"
                      stackId="1"
                      stroke="#A63FFF"
                      fill="url(#colorBooking)"
                    />
                    <Area
                      type="monotone"
                      dataKey="คอนเสิร์ต"
                      stackId="1"
                      stroke="#D91DCC"
                      fill="#D91DCC"
                      fillOpacity={0.3}
                    />
                    <Area
                      type="monotone"
                      dataKey="อาหาร"
                      stackId="1"
                      stroke="#7C3AED"
                      fill="#7C3AED"
                      fillOpacity={0.3}
                    />
                    <Line
                      type="monotone"
                      dataKey="target"
                      stroke="#fff"
                      strokeWidth={2}
                      strokeDasharray="5 5"
                      dot={false}
                    />
                  </ComposedChart>
                </ResponsiveContainer>
              </Card>

              {/* Category Distribution */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center justify-between mb-6">
                  <div>
                    <h3 className="text-lg mb-1">สัดส่วนรายได้ตามประเภท</h3>
                    <p className="text-sm text-white/60">
                      แยกตามหมวดหมู่สินค้า
                    </p>
                  </div>
                </div>
                <div className="flex items-center justify-center">
                  <ResponsiveContainer width="100%" height={300}>
                    <RechartsPieChart>
                      <Pie
                        data={categoryData}
                        cx="50%"
                        cy="50%"
                        innerRadius={60}
                        outerRadius={100}
                        paddingAngle={2}
                        dataKey="value"
                      >
                        {categoryData.map((entry, index) => (
                          <Cell key={`cell-${index}`} fill={entry.color} />
                        ))}
                      </Pie>
                      <Tooltip
                        contentStyle={{
                          backgroundColor: 'rgba(0,0,0,0.9)',
                          border: '1px solid rgba(255,255,255,0.1)',
                          borderRadius: '8px',
                        }}
                      />
                    </RechartsPieChart>
                  </ResponsiveContainer>
                </div>
                <div className="grid grid-cols-2 gap-4 mt-6">
                  {categoryData.map(item => (
                    <div key={item.name} className="flex items-center gap-3">
                      <div
                        className="w-3 h-3 rounded-full"
                        style={{ backgroundColor: item.color }}
                      />
                      <div className="flex-1">
                        <p className="text-sm text-white/80">{item.name}</p>
                        <p className="text-xs text-white/40">
                          ฿{item.value.toLocaleString()}
                        </p>
                      </div>
                    </div>
                  ))}
                </div>
              </Card>
            </div>

            {/* Peak Hours & Top Products */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              {/* Peak Hours */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center gap-3 mb-6">
                  <Clock className="w-5 h-5 text-[#A63FFF]" />
                  <div>
                    <h3 className="text-lg">ช่วงเวลา Peak Hours</h3>
                    <p className="text-sm text-white/60">
                      ช่วงเวลาที่มียอดขายสูงสุด
                    </p>
                  </div>
                </div>
                <div className="space-y-4">
                  {peakHours.map(hour => (
                    <div
                      key={hour.time}
                      className="p-4 bg-white/5 rounded-lg border border-white/10 hover:bg-white/10 transition-all"
                    >
                      <div className="flex items-center justify-between mb-3">
                        <div className="flex items-center gap-2">
                          <p className="text-sm">{hour.time}</p>
                          <Badge
                            className={`text-xs ${
                              hour.capacity > 100
                                ? 'bg-red-500/20 text-red-400'
                                : hour.capacity > 90
                                ? 'bg-yellow-500/20 text-yellow-400'
                                : 'bg-green-500/20 text-green-400'
                            }`}
                          >
                            {hour.capacity}% Capacity
                          </Badge>
                        </div>
                        <p className="text-sm text-white/60">
                          {hour.orders} ออเดอร์
                        </p>
                      </div>
                      <div className="space-y-2">
                        <div className="flex items-center justify-between text-xs text-white/60">
                          <span>รายได้: ฿{hour.revenue.toLocaleString()}</span>
                          <span>รอเฉลี่ย: {hour.avgWait} นาที</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="flex-1 h-2 bg-white/10 rounded-full overflow-hidden">
                            <div
                              className={`h-full ${
                                hour.capacity > 100
                                  ? 'bg-gradient-to-r from-red-500 to-red-600'
                                  : hour.capacity > 90
                                  ? 'bg-gradient-to-r from-yellow-500 to-yellow-600'
                                  : 'bg-gradient-to-r from-[#A63FFF] to-[#D91DCC]'
                              }`}
                              style={{
                                width: `${Math.min(hour.capacity, 100)}%`,
                              }}
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </Card>

              {/* Top Products */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center gap-3 mb-6">
                  <TrendingUp className="w-5 h-5 text-[#D91DCC]" />
                  <div>
                    <h3 className="text-lg">สินค้า/บริการ Bestseller</h3>
                    <p className="text-sm text-white/60">ขายดีที่สุด Top 3</p>
                  </div>
                </div>
                <div className="space-y-4">
                  {topProducts.map((product, index) => (
                    <div
                      key={product.name}
                      className="p-4 bg-white/5 rounded-lg border border-white/10 hover:bg-white/10 transition-all"
                    >
                      <div className="flex items-center justify-between mb-3">
                        <div className="flex items-center gap-2">
                          <div className="w-8 h-8 rounded-full bg-gradient-to-br from-[#A63FFF] to-[#D91DCC] flex items-center justify-center text-xs">
                            {index + 1}
                          </div>
                          <div>
                            <p className="text-sm">{product.name}</p>
                            <p className="text-xs text-white/40">
                              {product.quantity} รายการ
                            </p>
                          </div>
                        </div>
                        <Badge className="bg-green-500/20 text-green-400 border-0">
                          {product.trend}
                        </Badge>
                      </div>
                      <div className="grid grid-cols-3 gap-4 text-center">
                        <div>
                          <p className="text-xs text-white/60 mb-1">ยอดขาย</p>
                          <p className="text-sm text-green-400">
                            ฿{product.revenue.toLocaleString()}
                          </p>
                        </div>
                        <div>
                          <p className="text-xs text-white/60 mb-1">
                            เฉลี่ย/รายการ
                          </p>
                          <p className="text-sm">
                            ฿{(product.revenue / product.quantity).toFixed(0)}
                          </p>
                        </div>
                        <div>
                          <p className="text-xs text-white/60 mb-1">LTV</p>
                          <p className="text-sm text-[#A63FFF]">
                            ฿{product.ltv.toLocaleString()}
                          </p>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </Card>
            </div>
          </TabsContent>

          {/* Real-time Tab */}
          <TabsContent value="realtime" className="mt-8 space-y-6">
            {/* Real-time Metrics */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {metrics.map((metric, index) => {
                const Icon = metric.icon;
                return (
                  <motion.div
                    key={metric.label}
                    initial={{ opacity: 0, scale: 0.9 }}
                    animate={{ opacity: 1, scale: 1 }}
                    transition={{ delay: index * 0.1 }}
                  >
                    <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6 hover:bg-white/10 transition-all">
                      <div className="flex items-start justify-between mb-4">
                        <div
                          className="w-12 h-12 rounded-xl flex items-center justify-center"
                          style={{ backgroundColor: `${metric.color}20` }}
                        >
                          <Icon
                            className="w-6 h-6"
                            style={{ color: metric.color }}
                          />
                        </div>
                        <Badge
                          className="text-xs"
                          style={{
                            backgroundColor: `${metric.color}20`,
                            color: metric.color,
                            border: 0,
                          }}
                        >
                          <RefreshCw className="w-3 h-3 mr-1 animate-spin" />
                          Live
                        </Badge>
                      </div>
                      <div>
                        <p className="text-sm text-white/60 mb-1">
                          {metric.label}
                        </p>
                        <p className="text-2xl mb-1">{metric.value}</p>
                        <p className="text-xs text-white/40">{metric.period}</p>
                      </div>
                    </Card>
                  </motion.div>
                );
              })}
            </div>

            {/* Real-time Charts */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              {/* Hourly Revenue */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center gap-3 mb-6">
                  <Activity className="w-5 h-5 text-[#A63FFF]" />
                  <div>
                    <h3 className="text-lg">รายได้แบบ Real-time</h3>
                    <p className="text-sm text-white/60">อัปเดตทุก 5 นาที</p>
                  </div>
                </div>
                <ResponsiveContainer width="100%" height={300}>
                  <AreaChart data={hourlyData}>
                    <defs>
                      <linearGradient
                        id="revenueGradient"
                        x1="0"
                        y1="0"
                        x2="0"
                        y2="1"
                      >
                        <stop
                          offset="5%"
                          stopColor="#A63FFF"
                          stopOpacity={0.5}
                        />
                        <stop
                          offset="95%"
                          stopColor="#A63FFF"
                          stopOpacity={0}
                        />
                      </linearGradient>
                    </defs>
                    <CartesianGrid
                      strokeDasharray="3 3"
                      stroke="rgba(255,255,255,0.1)"
                    />
                    <XAxis dataKey="time" stroke="rgba(255,255,255,0.5)" />
                    <YAxis stroke="rgba(255,255,255,0.5)" />
                    <Tooltip
                      contentStyle={{
                        backgroundColor: 'rgba(0,0,0,0.9)',
                        border: '1px solid rgba(255,255,255,0.1)',
                        borderRadius: '8px',
                      }}
                    />
                    <Area
                      type="monotone"
                      dataKey="revenue"
                      stroke="#A63FFF"
                      strokeWidth={2}
                      fill="url(#revenueGradient)"
                    />
                  </AreaChart>
                </ResponsiveContainer>
              </Card>

              {/* Orders & Customers */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center gap-3 mb-6">
                  <Users className="w-5 h-5 text-[#D91DCC]" />
                  <div>
                    <h3 className="text-lg">จำนวนลูกค้า & ออเดอร์</h3>
                    <p className="text-sm text-white/60">
                      เปรียบเทียบรายชั่วโมง
                    </p>
                  </div>
                </div>
                <ResponsiveContainer width="100%" height={300}>
                  <BarChart data={hourlyData}>
                    <CartesianGrid
                      strokeDasharray="3 3"
                      stroke="rgba(255,255,255,0.1)"
                    />
                    <XAxis dataKey="time" stroke="rgba(255,255,255,0.5)" />
                    <YAxis stroke="rgba(255,255,255,0.5)" />
                    <Tooltip
                      contentStyle={{
                        backgroundColor: 'rgba(0,0,0,0.9)',
                        border: '1px solid rgba(255,255,255,0.1)',
                        borderRadius: '8px',
                      }}
                    />
                    <Legend />
                    <Bar
                      dataKey="customers"
                      fill="#A63FFF"
                      radius={[8, 8, 0, 0]}
                    />
                    <Bar
                      dataKey="orders"
                      fill="#D91DCC"
                      radius={[8, 8, 0, 0]}
                    />
                  </BarChart>
                </ResponsiveContainer>
              </Card>
            </div>
          </TabsContent>

          {/* Analytics Tab */}
          <TabsContent value="analytics" className="mt-8 space-y-6">
            {/* Analytics Metrics */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {analyticsMetrics.map((metric, index) => (
                <motion.div
                  key={metric.label}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: index * 0.1 }}
                >
                  <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                    <div className="flex items-start justify-between mb-4">
                      <div
                        className="w-12 h-12 rounded-xl flex items-center justify-center"
                        style={{ backgroundColor: `${metric.color}20` }}
                      >
                        <BarChart3
                          className="w-6 h-6"
                          style={{ color: metric.color }}
                        />
                      </div>
                      <Badge
                        className="text-xs"
                        style={{
                          backgroundColor: `${metric.color}20`,
                          color: metric.color,
                          border: 0,
                        }}
                      >
                        {metric.badge}
                      </Badge>
                    </div>
                    <div>
                      <p className="text-sm text-white/60 mb-1">
                        {metric.label}
                      </p>
                      <p className="text-2xl mb-1">{metric.value}</p>
                      <p className="text-xs text-white/40">{metric.period}</p>
                    </div>
                  </Card>
                </motion.div>
              ))}
            </div>

            {/* Analytics Charts */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              {/* Customer Segmentation */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center gap-3 mb-6">
                  <Users className="w-5 h-5 text-[#A63FFF]" />
                  <div>
                    <h3 className="text-lg">Customer Segmentation</h3>
                    <p className="text-sm text-white/60">
                      แบ่งกลุ่มลูกค้าตามพฤติกรรม
                    </p>
                  </div>
                </div>
                <ResponsiveContainer width="100%" height={300}>
                  <BarChart data={customerSegmentation} layout="vertical">
                    <CartesianGrid
                      strokeDasharray="3 3"
                      stroke="rgba(255,255,255,0.1)"
                    />
                    <XAxis type="number" stroke="rgba(255,255,255,0.5)" />
                    <YAxis
                      dataKey="segment"
                      type="category"
                      stroke="rgba(255,255,255,0.5)"
                      width={120}
                    />
                    <Tooltip
                      contentStyle={{
                        backgroundColor: 'rgba(0,0,0,0.9)',
                        border: '1px solid rgba(255,255,255,0.1)',
                        borderRadius: '8px',
                      }}
                    />
                    <Legend />
                    <Bar
                      dataKey="ทั้งหมด"
                      fill="#A63FFF"
                      radius={[0, 8, 8, 0]}
                    />
                    <Bar
                      dataKey="ลูกค้าประจำ"
                      fill="#D91DCC"
                      radius={[0, 8, 8, 0]}
                    />
                  </BarChart>
                </ResponsiveContainer>
              </Card>

              {/* Customer Sentiment */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center gap-3 mb-6">
                  <Star className="w-5 h-5 text-[#D91DCC]" />
                  <div>
                    <h3 className="text-lg">Customer Sentiment</h3>
                    <p className="text-sm text-white/60">
                      คะแนนความพึงพอใจแต่ละด้าน
                    </p>
                  </div>
                </div>
                <div className="flex items-center justify-center">
                  <ResponsiveContainer width="100%" height={300}>
                    <RadarChart data={sentimentData}>
                      <PolarGrid stroke="rgba(255,255,255,0.1)" />
                      <PolarAngleAxis
                        dataKey="subject"
                        stroke="rgba(255,255,255,0.5)"
                      />
                      <PolarRadiusAxis stroke="rgba(255,255,255,0.5)" />
                      <Radar
                        name="คะแนน"
                        dataKey="score"
                        stroke="#A63FFF"
                        fill="#A63FFF"
                        fillOpacity={0.3}
                      />
                      <Tooltip
                        contentStyle={{
                          backgroundColor: 'rgba(0,0,0,0.9)',
                          border: '1px solid rgba(255,255,255,0.1)',
                          borderRadius: '8px',
                        }}
                      />
                    </RadarChart>
                  </ResponsiveContainer>
                </div>
              </Card>
            </div>
          </TabsContent>

          {/* Live Operations Tab */}
          <TabsContent value="operations" className="mt-8 space-y-6">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              {/* Floor Map */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center gap-3 mb-6">
                  <MapPin className="w-5 h-5 text-[#A63FFF]" />
                  <div>
                    <h3 className="text-lg">Live Floor Map</h3>
                    <p className="text-sm text-white/60">
                      สถานะโต๊ะแบบ Real-time
                    </p>
                  </div>
                </div>

                <div className="space-y-4">
                  {/* Legend */}
                  <div className="flex flex-wrap gap-4 text-xs">
                    <div className="flex items-center gap-2">
                      <div className="w-3 h-3 rounded bg-red-500/20 border border-red-500/50" />
                      <span>ลูกค้านั่งอยู่</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <div className="w-3 h-3 rounded bg-green-500/20 border border-green-500/50" />
                      <span>ว่าง</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <div className="w-3 h-3 rounded bg-blue-500/20 border border-blue-500/50" />
                      <span>จองแล้ว</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <div className="w-3 h-3 rounded bg-yellow-500/20 border border-yellow-500/50" />
                      <span>กำลังทำความสะอาด</span>
                    </div>
                  </div>

                  {/* Tables Grid */}
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
                    {tables.map(table => (
                      <motion.div
                        key={table.id}
                        whileHover={{ scale: 1.05 }}
                        className={`p-3 rounded-lg border cursor-pointer transition-all ${getTableColor(
                          table.status
                        )}`}
                      >
                        <div className="flex items-center justify-between mb-2">
                          <p className="text-sm">
                            T-{table.id.toString().padStart(2, '0')}
                          </p>
                          <Badge className="text-xs bg-white/10 text-white/80 border-0">
                            {table.capacity} ที่
                          </Badge>
                        </div>
                        <div className="space-y-1">
                          <p className="text-xs text-white/60">{table.zone}</p>
                          {table.status === 'occupied' && (
                            <>
                              <p className="text-xs text-green-400">
                                {table.order}
                              </p>
                              <p className="text-xs text-white/40">
                                {table.time}
                              </p>
                            </>
                          )}
                          {table.status === 'reserved' && (
                            <p className="text-xs text-blue-400">
                              เช็คอิน: {table.time}
                            </p>
                          )}
                          {table.status === 'cleaning' && (
                            <p className="text-xs text-yellow-400">
                              พร้อมใน {table.time}
                            </p>
                          )}
                        </div>
                      </motion.div>
                    ))}
                  </div>

                  {/* Summary */}
                  <div className="grid grid-cols-4 gap-4 pt-4 border-t border-white/10">
                    <div className="text-center">
                      <p className="text-2xl text-red-400">
                        {tables.filter(t => t.status === 'occupied').length}
                      </p>
                      <p className="text-xs text-white/60">ลูกค้านั่ง</p>
                    </div>
                    <div className="text-center">
                      <p className="text-2xl text-green-400">
                        {tables.filter(t => t.status === 'available').length}
                      </p>
                      <p className="text-xs text-white/60">ว่าง</p>
                    </div>
                    <div className="text-center">
                      <p className="text-2xl text-blue-400">
                        {tables.filter(t => t.status === 'reserved').length}
                      </p>
                      <p className="text-xs text-white/60">จองแล้ว</p>
                    </div>
                    <div className="text-center">
                      <p className="text-2xl text-yellow-400">
                        {tables.filter(t => t.status === 'cleaning').length}
                      </p>
                      <p className="text-xs text-white/60">ทำความสะอาด</p>
                    </div>
                  </div>
                </div>
              </Card>

              {/* Active Orders Queue */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center gap-3 mb-6">
                  <Utensils className="w-5 h-5 text-[#D91DCC]" />
                  <div>
                    <h3 className="text-lg">Live Order Queue</h3>
                    <p className="text-sm text-white/60">
                      รายการออเดอร์ที่กำลังดำเนินการ
                    </p>
                  </div>
                </div>

                <div className="space-y-3">
                  {activeOrders.map(order => (
                    <motion.div
                      key={order.id}
                      initial={{ opacity: 0, x: -20 }}
                      animate={{ opacity: 1, x: 0 }}
                      className="p-4 bg-white/5 rounded-lg border border-white/10 hover:bg-white/10 transition-all"
                    >
                      <div className="flex items-center justify-between mb-3">
                        <div className="flex items-center gap-2">
                          <p className="text-sm">{order.id}</p>
                          <Badge className="text-xs bg-white/10 text-white/80 border-0">
                            {order.table}
                          </Badge>
                        </div>
                        <div className="flex items-center gap-2">
                          <Badge
                            className={`text-xs ${getOrderStatusColor(
                              order.status
                            )}`}
                          >
                            {order.status === 'pending' && 'รอทำ'}
                            {order.status === 'cooking' && 'กำลังทำ'}
                            {order.status === 'ready' && 'พร้อมเสิร์ฟ'}
                          </Badge>
                          <Badge
                            className={`text-xs ${getPriorityColor(
                              order.priority
                            )}`}
                          >
                            {order.priority === 'urgent' && '🔥 ด่วน'}
                            {order.priority === 'high' && '⚡ สูง'}
                            {order.priority === 'normal' && 'ปกติ'}
                          </Badge>
                        </div>
                      </div>

                      <div className="space-y-2">
                        <div className="flex flex-wrap gap-1">
                          {order.items.map((item, idx) => (
                            <Badge
                              key={idx}
                              variant="outline"
                              className="text-xs border-white/20"
                            >
                              {item}
                            </Badge>
                          ))}
                        </div>
                        <div className="flex items-center justify-between text-xs text-white/60">
                          <span className="flex items-center gap-1">
                            <Clock className="w-3 h-3" />
                            {order.time}
                          </span>
                          {order.status === 'ready' && (
                            <Button
                              size="sm"
                              className="h-6 text-xs bg-green-500 hover:bg-green-600"
                            >
                              <CheckCircle2 className="w-3 h-3 mr-1" />
                              เสิร์ฟแล้ว
                            </Button>
                          )}
                        </div>
                      </div>
                    </motion.div>
                  ))}
                </div>

                {/* Queue Summary */}
                <div className="grid grid-cols-3 gap-4 mt-6 pt-4 border-t border-white/10">
                  <div className="text-center">
                    <p className="text-2xl text-yellow-400">
                      {activeOrders.filter(o => o.status === 'pending').length}
                    </p>
                    <p className="text-xs text-white/60">รอทำ</p>
                  </div>
                  <div className="text-center">
                    <p className="text-2xl text-blue-400">
                      {activeOrders.filter(o => o.status === 'cooking').length}
                    </p>
                    <p className="text-xs text-white/60">กำลังทำ</p>
                  </div>
                  <div className="text-center">
                    <p className="text-2xl text-green-400">
                      {activeOrders.filter(o => o.status === 'ready').length}
                    </p>
                    <p className="text-xs text-white/60">พร้อมเสิร์ฟ</p>
                  </div>
                </div>
              </Card>
            </div>
          </TabsContent>

          {/* Customers Tab */}
          <TabsContent value="customers" className="mt-8 space-y-6">
            <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
              {/* Customer Segmentation Details */}
              <Card className="lg:col-span-2 bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center gap-3 mb-6">
                  <Users className="w-5 h-5 text-[#A63FFF]" />
                  <div>
                    <h3 className="text-lg">Customer Intelligence</h3>
                    <p className="text-sm text-white/60">
                      รายละเอียดกลุ่มลูกค้าและ LTV
                    </p>
                  </div>
                </div>

                <div className="space-y-4">
                  {customerSegmentation.map((segment, idx) => (
                    <div
                      key={segment.segment}
                      className="p-4 bg-white/5 rounded-lg border border-white/10 hover:bg-white/10 transition-all"
                    >
                      <div className="flex items-center justify-between mb-3">
                        <div className="flex items-center gap-2">
                          <div className="w-10 h-10 rounded-full bg-gradient-to-br from-[#A63FFF] to-[#D91DCC] flex items-center justify-center text-sm">
                            {idx + 1}
                          </div>
                          <div>
                            <p className="text-sm">{segment.segment}</p>
                            <p className="text-xs text-white/40">
                              {segment.ทั้งหมด} คน
                            </p>
                          </div>
                        </div>
                        <Badge className="bg-gradient-to-r from-[#A63FFF] to-[#D91DCC] border-0">
                          ฿{segment.ltv.toLocaleString()} LTV
                        </Badge>
                      </div>

                      <div className="space-y-2">
                        <div className="flex items-center justify-between text-xs text-white/60">
                          <span>Repeat Rate</span>
                          <span>
                            {(
                              (segment.ลูกค้าประจำ / segment.ทั้งหมด) *
                              100
                            ).toFixed(1)}
                            %
                          </span>
                        </div>
                        <Progress
                          value={(segment.ลูกค้าประจำ / segment.ทั้งหมด) * 100}
                          className="h-2"
                        />
                        <div className="flex items-center justify-between text-xs">
                          <span className="text-white/60">ลูกค้าประจำ</span>
                          <span className="text-[#A63FFF]">
                            {segment.ลูกค้าประจำ} คน
                          </span>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </Card>

              {/* Customer Actions */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center gap-3 mb-6">
                  <Target className="w-5 h-5 text-[#D91DCC]" />
                  <div>
                    <h3 className="text-lg">Quick Actions</h3>
                    <p className="text-sm text-white/60">จัดการลูกค้า</p>
                  </div>
                </div>

                <div className="space-y-3">
                  <Button className="w-full justify-start gap-2 bg-gradient-to-r from-[#A63FFF] to-[#D91DCC] hover:opacity-90">
                    <Send className="w-4 h-4" />
                    ส่งแคมเปญการตลาด
                  </Button>
                  <Button
                    variant="outline"
                    className="w-full justify-start gap-2 border-white/20"
                  >
                    <UserPlus className="w-4 h-4" />
                    เพิ่มลูกค้าใหม่
                  </Button>
                  <Button
                    variant="outline"
                    className="w-full justify-start gap-2 border-white/20"
                  >
                    <UserCheck className="w-4 h-4" />
                    ดู VIP Customers
                  </Button>
                  <Button
                    variant="outline"
                    className="w-full justify-start gap-2 border-white/20"
                  >
                    <UserX className="w-4 h-4" />
                    At-risk Customers (23)
                  </Button>

                  <Separator className="my-4" />

                  <div className="space-y-3">
                    <div>
                      <p className="text-xs text-white/60 mb-2">
                        Customer Stats
                      </p>
                      <div className="space-y-2">
                        <div className="flex items-center justify-between text-sm">
                          <span>New this month</span>
                          <span className="text-green-400">+124</span>
                        </div>
                        <div className="flex items-center justify-between text-sm">
                          <span>Churned</span>
                          <span className="text-red-400">-18</span>
                        </div>
                        <div className="flex items-center justify-between text-sm">
                          <span>Retention Rate</span>
                          <span className="text-[#A63FFF]">92.8%</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </Card>
            </div>
          </TabsContent>

          {/* Financial Tab */}
          <TabsContent value="financial" className="mt-8 space-y-6">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              {/* P&L Statement */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center gap-3 mb-6">
                  <Wallet className="w-5 h-5 text-[#A63FFF]" />
                  <div>
                    <h3 className="text-lg">Profit & Loss Statement</h3>
                    <p className="text-sm text-white/60">
                      งบกำไรขาดทุนเดือนนี้
                    </p>
                  </div>
                </div>

                <div className="space-y-3">
                  {financialData.map(item => (
                    <div
                      key={item.category}
                      className={`p-4 rounded-lg border ${
                        item.type === 'income'
                          ? 'bg-green-500/10 border-green-500/30'
                          : item.type === 'profit'
                          ? 'bg-blue-500/10 border-blue-500/30'
                          : 'bg-red-500/10 border-red-500/30'
                      }`}
                    >
                      <div className="flex items-center justify-between mb-2">
                        <p className="text-sm">{item.category}</p>
                        <p
                          className={`text-sm ${
                            item.type === 'income' || item.type === 'profit'
                              ? 'text-green-400'
                              : 'text-red-400'
                          }`}
                        >
                          {item.amount < 0 ? '-' : ''}฿
                          {Math.abs(item.amount).toLocaleString()}
                        </p>
                      </div>
                      <div className="flex items-center gap-2">
                        <Progress
                          value={item.percentage}
                          className="h-1.5 flex-1"
                        />
                        <span className="text-xs text-white/60 w-10">
                          {item.percentage}%
                        </span>
                      </div>
                    </div>
                  ))}
                </div>

                <Separator className="my-6" />

                <div className="grid grid-cols-2 gap-4">
                  <div className="p-4 bg-green-500/10 rounded-lg border border-green-500/30 text-center">
                    <p className="text-xs text-white/60 mb-1">Gross Profit</p>
                    <p className="text-xl text-green-400">฿971,600</p>
                    <p className="text-xs text-white/40">70%</p>
                  </div>
                  <div className="p-4 bg-blue-500/10 rounded-lg border border-blue-500/30 text-center">
                    <p className="text-xs text-white/60 mb-1">Net Profit</p>
                    <p className="text-xl text-blue-400">฿333,120</p>
                    <p className="text-xs text-white/40">24%</p>
                  </div>
                </div>
              </Card>

              {/* Payment Methods */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center gap-3 mb-6">
                  <CreditCard className="w-5 h-5 text-[#D91DCC]" />
                  <div>
                    <h3 className="text-lg">Payment Analytics</h3>
                    <p className="text-sm text-white/60">
                      การชำระเงินตามช่องทาง
                    </p>
                  </div>
                </div>

                <div className="space-y-4">
                  <div className="p-4 bg-white/5 rounded-lg border border-white/10">
                    <div className="flex items-center justify-between mb-3">
                      <div className="flex items-center gap-2">
                        <div className="w-10 h-10 rounded-full bg-gradient-to-br from-[#A63FFF] to-[#D91DCC] flex items-center justify-center">
                          <CreditCard className="w-5 h-5" />
                        </div>
                        <div>
                          <p className="text-sm">QR PromptPay</p>
                          <p className="text-xs text-white/40">
                            อัตโนมัติ 100%
                          </p>
                        </div>
                      </div>
                      <div className="text-right">
                        <p className="text-sm text-green-400">฿892,500</p>
                        <p className="text-xs text-white/60">64.3%</p>
                      </div>
                    </div>
                    <Progress value={64.3} className="h-2" />
                  </div>

                  <div className="p-4 bg-white/5 rounded-lg border border-white/10">
                    <div className="flex items-center justify-between mb-3">
                      <div className="flex items-center gap-2">
                        <div className="w-10 h-10 rounded-full bg-gradient-to-br from-[#7C3AED] to-[#EC4899] flex items-center justify-center">
                          <CreditCard className="w-5 h-5" />
                        </div>
                        <div>
                          <p className="text-sm">บัตรเครดิต/เดบิต</p>
                          <p className="text-xs text-white/40">
                            ค่าธรรมเนียม 2%
                          </p>
                        </div>
                      </div>
                      <div className="text-right">
                        <p className="text-sm text-green-400">฿347,600</p>
                        <p className="text-xs text-white/60">25%</p>
                      </div>
                    </div>
                    <Progress value={25} className="h-2" />
                  </div>

                  <div className="p-4 bg-white/5 rounded-lg border border-white/10">
                    <div className="flex items-center justify-between mb-3">
                      <div className="flex items-center gap-2">
                        <div className="w-10 h-10 rounded-full bg-gradient-to-br from-[#EC4899] to-[#D91DCC] flex items-center justify-center">
                          <Wallet className="w-5 h-5" />
                        </div>
                        <div>
                          <p className="text-sm">เงินสด</p>
                          <p className="text-xs text-white/40">
                            ไม่มีค่าธรรมเนียม
                          </p>
                        </div>
                      </div>
                      <div className="text-right">
                        <p className="text-sm text-green-400">฿147,900</p>
                        <p className="text-xs text-white/60">10.7%</p>
                      </div>
                    </div>
                    <Progress value={10.7} className="h-2" />
                  </div>
                </div>

                <Separator className="my-6" />

                <div className="space-y-3">
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-white/60">ค่าธรรมเนียมทั้งหมด</span>
                    <span className="text-red-400">-฿6,952</span>
                  </div>
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-white/60">ยอดสุทธิ</span>
                    <span className="text-green-400">฿1,381,048</span>
                  </div>
                  <div className="p-3 bg-blue-500/10 rounded-lg border border-blue-500/30 text-center">
                    <p className="text-xs text-white/60 mb-1">
                      ประหยัดค่าธรรมเนียม
                    </p>
                    <p className="text-sm text-blue-400">
                      -95% ด้วย QR PromptPay
                    </p>
                  </div>
                </div>
              </Card>
            </div>
          </TabsContent>

          {/* Marketing Tab */}
          <TabsContent value="marketing" className="mt-8 space-y-6">
            <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
              <div className="flex items-center gap-3 mb-6">
                <Megaphone className="w-5 h-5 text-[#A63FFF]" />
                <div>
                  <h3 className="text-lg">Marketing Campaign Performance</h3>
                  <p className="text-sm text-white/60">
                    ROI และผลลัพธ์ของแคมเปญ
                  </p>
                </div>
              </div>

              <div className="space-y-4">
                {campaigns.map(campaign => (
                  <div
                    key={campaign.name}
                    className="p-6 bg-white/5 rounded-lg border border-white/10 hover:bg-white/10 transition-all"
                  >
                    <div className="flex items-center justify-between mb-4">
                      <div className="flex items-center gap-3">
                        <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-[#A63FFF] to-[#D91DCC] flex items-center justify-center">
                          <Megaphone className="w-6 h-6" />
                        </div>
                        <div>
                          <p className="text-sm mb-1">{campaign.name}</p>
                          <div className="flex items-center gap-2">
                            <Badge className="text-xs bg-green-500/20 text-green-400 border-0">
                              {campaign.status === 'active'
                                ? 'กำลังทำงาน'
                                : 'หยุดชั่วคราว'}
                            </Badge>
                            <Badge
                              variant="outline"
                              className="text-xs border-white/20"
                            >
                              {campaign.type}
                            </Badge>
                          </div>
                        </div>
                      </div>
                      <div className="text-right">
                        <p className="text-xs text-white/60 mb-1">ROI</p>
                        <p className="text-2xl text-green-400">
                          {campaign.roi}
                        </p>
                      </div>
                    </div>

                    <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-4">
                      <div>
                        <p className="text-xs text-white/60 mb-1">งบประมาณ</p>
                        <p className="text-sm">{campaign.budget}</p>
                      </div>
                      <div>
                        <p className="text-xs text-white/60 mb-1">ใช้ไป</p>
                        <p className="text-sm text-yellow-400">
                          {campaign.spent}
                        </p>
                      </div>
                      <div>
                        <p className="text-xs text-white/60 mb-1">รายได้</p>
                        <p className="text-sm text-green-400">
                          {campaign.revenue}
                        </p>
                      </div>
                      <div>
                        <p className="text-xs text-white/60 mb-1">
                          Conversions
                        </p>
                        <p className="text-sm text-[#A63FFF]">
                          {campaign.conversions}
                        </p>
                      </div>
                    </div>

                    <div className="space-y-2">
                      <div className="flex items-center justify-between text-xs text-white/60">
                        <span>งบประมาณที่ใช้</span>
                        <span>
                          {(
                            (parseInt(campaign.spent.replace(/[฿,]/g, '')) /
                              parseInt(campaign.budget.replace(/[฿,]/g, ''))) *
                            100
                          ).toFixed(1)}
                          %
                        </span>
                      </div>
                      <Progress
                        value={
                          (parseInt(campaign.spent.replace(/[฿,]/g, '')) /
                            parseInt(campaign.budget.replace(/[฿,]/g, ''))) *
                          100
                        }
                        className="h-2"
                      />
                      <div className="flex items-center justify-between text-xs">
                        <span className="text-white/60">Conversion Rate</span>
                        <span className="text-[#A63FFF]">
                          {(
                            (campaign.conversions / campaign.impressions) *
                            100
                          ).toFixed(2)}
                          %
                        </span>
                      </div>
                    </div>
                  </div>
                ))}
              </div>

              <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mt-6 pt-6 border-t border-white/10">
                <div className="p-4 bg-green-500/10 rounded-lg border border-green-500/30 text-center">
                  <p className="text-xs text-white/60 mb-1">Total Revenue</p>
                  <p className="text-2xl text-green-400">฿412,500</p>
                  <p className="text-xs text-white/40">จากทุกแคมเปญ</p>
                </div>
                <div className="p-4 bg-blue-500/10 rounded-lg border border-blue-500/30 text-center">
                  <p className="text-xs text-white/60 mb-1">Avg ROI</p>
                  <p className="text-2xl text-blue-400">450%</p>
                  <p className="text-xs text-white/40">เฉลี่ยทุกแคมเปญ</p>
                </div>
                <div className="p-4 bg-purple-500/10 rounded-lg border border-purple-500/30 text-center">
                  <p className="text-xs text-white/60 mb-1">
                    Total Conversions
                  </p>
                  <p className="text-2xl text-purple-400">479</p>
                  <p className="text-xs text-white/40">ลูกค้าที่แปลง</p>
                </div>
              </div>
            </Card>
          </TabsContent>

          {/* Bookings Tab */}
          <TabsContent value="bookings" className="mt-8 space-y-6">
            {/* Booking Stats Cards */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-start justify-between mb-4">
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-[#A63FFF] to-[#D91DCC] flex items-center justify-center">
                    <CalendarCheck className="w-6 h-6" />
                  </div>
                  <Badge className="bg-green-500/20 text-green-400 border-0">
                    <TrendingUp className="w-3 h-3 mr-1" />
                    +18.5%
                  </Badge>
                </div>
                <div>
                  <p className="text-sm text-white/60 mb-1">การจองวันนี้</p>
                  <p className="text-3xl mb-2">{bookingStats.today.total}</p>
                  <div className="grid grid-cols-3 gap-2 text-xs">
                    <div>
                      <p className="text-white/40">ยืนยัน</p>
                      <p className="text-green-400">
                        {bookingStats.today.confirmed}
                      </p>
                    </div>
                    <div>
                      <p className="text-white/40">รอ</p>
                      <p className="text-yellow-400">
                        {bookingStats.today.pending}
                      </p>
                    </div>
                    <div>
                      <p className="text-white/40">ยกเลิก</p>
                      <p className="text-red-400">
                        {bookingStats.today.cancelled}
                      </p>
                    </div>
                  </div>
                </div>
              </Card>

              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-start justify-between mb-4">
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-[#D91DCC] to-[#EC4899] flex items-center justify-center">
                    <DollarSign className="w-6 h-6" />
                  </div>
                  <Badge className="bg-green-500/20 text-green-400 border-0">
                    +24.2%
                  </Badge>
                </div>
                <div>
                  <p className="text-sm text-white/60 mb-1">รายได้จากจอง</p>
                  <p className="text-3xl mb-2">
                    ฿{bookingStats.today.revenue.toLocaleString()}
                  </p>
                  <p className="text-xs text-white/40">วันนี้</p>
                </div>
              </Card>

              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-start justify-between mb-4">
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-[#7C3AED] to-[#A63FFF] flex items-center justify-center">
                    <CalendarClock className="w-6 h-6" />
                  </div>
                  <Badge className="bg-yellow-500/20 text-yellow-400 border-0">
                    รอดำเนินการ
                  </Badge>
                </div>
                <div>
                  <p className="text-sm text-white/60 mb-1">รอยืนยัน</p>
                  <p className="text-3xl mb-2">{bookingStats.today.pending}</p>
                  <p className="text-xs text-white/40">ต้องดำเนินการ</p>
                </div>
              </Card>

              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-start justify-between mb-4">
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-[#EC4899] to-[#D91DCC] flex items-center justify-center">
                    <Percent className="w-6 h-6" />
                  </div>
                  <Badge className="bg-blue-500/20 text-blue-400 border-0">
                    92.5%
                  </Badge>
                </div>
                <div>
                  <p className="text-sm text-white/60 mb-1">อัตราการมา</p>
                  <p className="text-3xl mb-2">92.5%</p>
                  <p className="text-xs text-white/40">Show-up Rate</p>
                </div>
              </Card>
            </div>

            {/* Bookings List */}
            <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
              <div className="flex items-center justify-between mb-6">
                <div>
                  <h3 className="text-lg mb-1">รายการจองทั้งหมด</h3>
                  <p className="text-sm text-white/60">จัดการและติดตามการจอง</p>
                </div>
                <div className="flex items-center gap-2">
                  <Button
                    variant="outline"
                    size="sm"
                    className="border-white/10"
                  >
                    <Filter className="w-4 h-4 mr-2" />
                    กรอง
                  </Button>
                  <Button className="bg-gradient-to-r from-[#A63FFF] to-[#D91DCC]">
                    <CalendarCheck className="w-4 h-4 mr-2" />
                    เพิ่มการจอง
                  </Button>
                </div>
              </div>

              <div className="space-y-4">
                {bookings.map(booking => (
                  <motion.div
                    key={booking.id}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    className="p-4 bg-white/5 rounded-lg border border-white/10 hover:bg-white/10 transition-all"
                  >
                    <div className="flex items-start justify-between mb-3">
                      <div className="flex-1">
                        <div className="flex items-center gap-3 mb-2">
                          <p className="text-sm">{booking.customerName}</p>
                          <Badge
                            className={`text-xs ${getBookingStatusColor(
                              booking.status
                            )}`}
                          >
                            {booking.status === 'confirmed' && '✓ ยืนยันแล้ว'}
                            {booking.status === 'pending' && '⏳ รอยืนยัน'}
                            {booking.status === 'cancelled' && '✕ ยกเลิก'}
                          </Badge>
                          <Badge
                            variant="outline"
                            className="text-xs border-white/20"
                          >
                            {booking.id}
                          </Badge>
                        </div>
                        <div className="grid grid-cols-2 md:grid-cols-4 gap-3 text-xs text-white/60">
                          <div className="flex items-center gap-1">
                            <Calendar className="w-3 h-3" />
                            {booking.date}
                          </div>
                          <div className="flex items-center gap-1">
                            <Clock className="w-3 h-3" />
                            {booking.time}
                          </div>
                          <div className="flex items-center gap-1">
                            <Users className="w-3 h-3" />
                            {booking.guests} ท่าน
                          </div>
                          <div className="flex items-center gap-1">
                            <MapPin className="w-3 h-3" />
                            {booking.table} ({booking.zone})
                          </div>
                        </div>
                        {booking.notes && (
                          <div className="mt-2 flex items-start gap-1 text-xs text-white/40">
                            <StickyNote className="w-3 h-3 mt-0.5" />
                            <span>{booking.notes}</span>
                          </div>
                        )}
                      </div>
                      <div className="flex flex-col items-end gap-2">
                        <p className="text-sm text-green-400">
                          ฿{booking.price.toLocaleString()}
                        </p>
                        {booking.deposit > 0 && (
                          <p className="text-xs text-white/40">
                            มัดจำ: ฿{booking.deposit.toLocaleString()}
                          </p>
                        )}
                        <div className="flex items-center gap-1">
                          <Button
                            size="sm"
                            variant="outline"
                            className="h-7 px-2 border-white/20"
                          >
                            <Eye className="w-3 h-3" />
                          </Button>
                          <Button
                            size="sm"
                            variant="outline"
                            className="h-7 px-2 border-white/20"
                          >
                            <Edit className="w-3 h-3" />
                          </Button>
                          <Button
                            size="sm"
                            variant="outline"
                            className="h-7 px-2 border-white/20"
                          >
                            <Phone className="w-3 h-3" />
                          </Button>
                        </div>
                      </div>
                    </div>
                    <div className="flex items-center justify-between text-xs text-white/40 pt-2 border-t border-white/5">
                      <div className="flex items-center gap-4">
                        <div className="flex items-center gap-1">
                          <Phone className="w-3 h-3" />
                          {booking.phone}
                        </div>
                        <div className="flex items-center gap-1">
                          <Mail className="w-3 h-3" />
                          {booking.email}
                        </div>
                      </div>
                      <span>จองเมื่อ: {booking.createdAt}</span>
                    </div>
                  </motion.div>
                ))}
              </div>
            </Card>
          </TabsContent>

          {/* Tickets Tab */}
          <TabsContent value="tickets" className="mt-8 space-y-6">
            {/* Ticket Stats Cards */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-start justify-between mb-4">
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-[#A63FFF] to-[#D91DCC] flex items-center justify-center">
                    <Ticket className="w-6 h-6" />
                  </div>
                  <Badge className="bg-green-500/20 text-green-400 border-0">
                    <TrendingUp className="w-3 h-3 mr-1" />
                    +32.5%
                  </Badge>
                </div>
                <div>
                  <p className="text-sm text-white/60 mb-1">บัตรที่ขายได้</p>
                  <p className="text-3xl mb-2">{ticketStats.thisMonth.sold}</p>
                  <div className="flex items-center justify-between text-xs">
                    <span className="text-white/40">
                      วันนี้: {ticketStats.today.sold}
                    </span>
                    <span className="text-green-400">
                      +{ticketStats.today.sold}
                    </span>
                  </div>
                </div>
              </Card>

              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-start justify-between mb-4">
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-[#D91DCC] to-[#EC4899] flex items-center justify-center">
                    <DollarSign className="w-6 h-6" />
                  </div>
                  <Badge className="bg-green-500/20 text-green-400 border-0">
                    +45.8%
                  </Badge>
                </div>
                <div>
                  <p className="text-sm text-white/60 mb-1">รายได้จากบัตร</p>
                  <p className="text-3xl mb-2">
                    ฿{ticketStats.thisMonth.revenue.toLocaleString()}
                  </p>
                  <p className="text-xs text-white/40">เดือนนี้</p>
                </div>
              </Card>

              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-start justify-between mb-4">
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-[#7C3AED] to-[#A63FFF] flex items-center justify-center">
                    <TicketCheck className="w-6 h-6" />
                  </div>
                  <Badge className="bg-blue-500/20 text-blue-400 border-0">
                    {ticketStats.total.activeEvents} งาน
                  </Badge>
                </div>
                <div>
                  <p className="text-sm text-white/60 mb-1">อีเวนท์ Active</p>
                  <p className="text-3xl mb-2">
                    {ticketStats.total.activeEvents}
                  </p>
                  <p className="text-xs text-white/40">
                    จากทั้งหมด {ticketStats.total.events} งาน
                  </p>
                </div>
              </Card>

              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-start justify-between mb-4">
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-[#EC4899] to-[#D91DCC] flex items-center justify-center">
                    <Percent className="w-6 h-6" />
                  </div>
                  <Badge className="bg-green-500/20 text-green-400 border-0">
                    78.9%
                  </Badge>
                </div>
                <div>
                  <p className="text-sm text-white/60 mb-1">อัตราการขาย</p>
                  <p className="text-3xl mb-2">78.9%</p>
                  <p className="text-xs text-white/40">
                    {ticketStats.total.soldTickets}/
                    {ticketStats.total.totalTickets} ใบ
                  </p>
                </div>
              </Card>
            </div>

            {/* Tickets List */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              {/* Event Tickets */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center justify-between mb-6">
                  <div>
                    <h3 className="text-lg mb-1">บัตรแต่ละอีเวนท์</h3>
                    <p className="text-sm text-white/60">สถานะและยอดขาย</p>
                  </div>
                  <Button className="bg-gradient-to-r from-[#A63FFF] to-[#D91DCC]">
                    <Ticket className="w-4 h-4 mr-2" />
                    สร้างบัตร
                  </Button>
                </div>

                <div className="space-y-4">
                  {tickets.map(ticket => (
                    <div
                      key={ticket.id}
                      className="p-4 bg-white/5 rounded-lg border border-white/10 hover:bg-white/10 transition-all"
                    >
                      <div className="flex items-start justify-between mb-3">
                        <div className="flex-1">
                          <div className="flex items-center gap-2 mb-2">
                            <p className="text-sm">{ticket.eventName}</p>
                            <Badge
                              className={`text-xs ${getTicketStatusColor(
                                ticket.status
                              )}`}
                            >
                              {ticket.status === 'selling' && '🎫 กำลังขาย'}
                              {ticket.status === 'sold-out' && '🔥 ขายหมด'}
                            </Badge>
                          </div>
                          <div className="flex items-center gap-4 text-xs text-white/60 mb-2">
                            <div className="flex items-center gap-1">
                              <Calendar className="w-3 h-3" />
                              {ticket.eventDate}
                            </div>
                            <div className="flex items-center gap-1">
                              <Clock className="w-3 h-3" />
                              {ticket.eventTime}
                            </div>
                          </div>
                          <Badge
                            variant="outline"
                            className="text-xs border-white/20"
                          >
                            {ticket.ticketType} - ฿
                            {ticket.price.toLocaleString()}
                          </Badge>
                        </div>
                      </div>

                      <div className="space-y-2">
                        <div className="flex items-center justify-between text-xs text-white/60">
                          <span>
                            ขายแล้ว: {ticket.sold}/{ticket.quantity} ใบ
                          </span>
                          <span className="text-green-400">
                            ฿{ticket.revenue.toLocaleString()}
                          </span>
                        </div>
                        <Progress
                          value={(ticket.sold / ticket.quantity) * 100}
                          className="h-2"
                        />
                        <div className="flex items-center justify-between text-xs">
                          <span
                            className={
                              ticket.available === 0
                                ? 'text-red-400'
                                : 'text-white/60'
                            }
                          >
                            คงเหลือ: {ticket.available} ใบ
                          </span>
                          <span className="text-[#A63FFF]">
                            {((ticket.sold / ticket.quantity) * 100).toFixed(1)}
                            %
                          </span>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </Card>

              {/* Recent Sales */}
              <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6">
                <div className="flex items-center justify-between mb-6">
                  <div>
                    <h3 className="text-lg mb-1">การขายล่าสุด</h3>
                    <p className="text-sm text-white/60">รายการซื้อบัตร</p>
                  </div>
                  <Button
                    variant="outline"
                    size="sm"
                    className="border-white/10"
                  >
                    <Eye className="w-4 h-4 mr-2" />
                    ดูทั้งหมด
                  </Button>
                </div>

                <div className="space-y-4">
                  {ticketSales.map(sale => (
                    <div
                      key={sale.id}
                      className="p-4 bg-white/5 rounded-lg border border-white/10 hover:bg-white/10 transition-all"
                    >
                      <div className="flex items-start justify-between mb-3">
                        <div className="flex-1">
                          <div className="flex items-center gap-2 mb-2">
                            <p className="text-sm">{sale.customerName}</p>
                            <Badge
                              className={`text-xs ${getTicketStatusColor(
                                sale.status
                              )}`}
                            >
                              {sale.status === 'paid' && '✓ ชำระแล้ว'}
                              {sale.status === 'pending' && '⏳ รอชำระ'}
                            </Badge>
                          </div>
                          <p className="text-xs text-white/60 mb-2">
                            {sale.eventName}
                          </p>
                          <div className="flex items-center gap-4 text-xs text-white/40">
                            <span>
                              {sale.ticketType} x{sale.quantity}
                            </span>
                            <span>{sale.paymentMethod}</span>
                          </div>
                        </div>
                        <div className="text-right">
                          <p className="text-sm text-green-400 mb-1">
                            ฿{sale.total.toLocaleString()}
                          </p>
                          <div className="flex items-center gap-1">
                            {sale.transferable && (
                              <Badge className="text-xs bg-blue-500/20 text-blue-400 border-0">
                                <Share2 className="w-3 h-3 mr-1" />
                                โอนได้
                              </Badge>
                            )}
                          </div>
                        </div>
                      </div>
                      <div className="flex items-center justify-between text-xs text-white/40 pt-2 border-t border-white/5">
                        <span>ซื้อเมื่อ: {sale.purchaseDate}</span>
                        <div className="flex items-center gap-1">
                          <Button
                            size="sm"
                            variant="outline"
                            className="h-6 px-2 border-white/20"
                          >
                            <QrCode className="w-3 h-3" />
                          </Button>
                          <Button
                            size="sm"
                            variant="outline"
                            className="h-6 px-2 border-white/20"
                          >
                            <Mail className="w-3 h-3" />
                          </Button>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </Card>
            </div>
          </TabsContent>

          {/* AI Insights Tab */}
          <TabsContent value="ai" className="mt-8 space-y-6">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              {aiRecommendations.map((rec, idx) => {
                const Icon = rec.icon;
                return (
                  <motion.div
                    key={rec.title}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: idx * 0.1 }}
                  >
                    <Card className="bg-white/5 border-white/10 backdrop-blur-xl p-6 hover:bg-white/10 transition-all group">
                      <div className="flex items-start gap-4 mb-4">
                        <div
                          className="w-12 h-12 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform"
                          style={{ backgroundColor: `${rec.color}20` }}
                        >
                          <Icon
                            className="w-6 h-6"
                            style={{ color: rec.color }}
                          />
                        </div>
                        <div className="flex-1">
                          <div className="flex items-start justify-between mb-2">
                            <div>
                              <h3 className="text-sm mb-1">{rec.title}</h3>
                              <Badge
                                className="text-xs"
                                style={{
                                  backgroundColor: `${rec.color}20`,
                                  color: rec.color,
                                  border: 0,
                                }}
                              >
                                <Brain className="w-3 h-3 mr-1" />
                                AI Insight
                              </Badge>
                            </div>
                          </div>
                          <p className="text-sm text-white/60 mb-4">
                            {rec.description}
                          </p>
                          <div className="flex items-center justify-between">
                            <div>
                              <p className="text-xs text-white/40 mb-1">
                                Potential Impact
                              </p>
                              <p
                                className="text-sm"
                                style={{ color: rec.color }}
                              >
                                {rec.impact}
                              </p>
                            </div>
                            <Button
                              size="sm"
                              className="bg-gradient-to-r from-[#A63FFF] to-[#D91DCC] hover:opacity-90"
                            >
                              <Zap className="w-4 h-4 mr-2" />
                              {rec.action}
                            </Button>
                          </div>
                        </div>
                      </div>
                    </Card>
                  </motion.div>
                );
              })}
            </div>

            {/* AI Summary */}
            <Card className="bg-gradient-to-br from-[#A63FFF]/10 to-[#D91DCC]/10 border-[#A63FFF]/30 backdrop-blur-xl p-6">
              <div className="flex items-center gap-3 mb-4">
                <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-[#A63FFF] to-[#D91DCC] flex items-center justify-center">
                  <Sparkles className="w-6 h-6 animate-pulse" />
                </div>
                <div>
                  <h3 className="text-lg">AI Daily Summary</h3>
                  <p className="text-sm text-white/60">
                    สรุปธุรกิจวันนี้โดย AI
                  </p>
                </div>
              </div>

              <div className="space-y-4">
                <div className="p-4 bg-white/5 rounded-lg border border-white/10">
                  <div className="flex items-start gap-3">
                    <ThumbsUp className="w-5 h-5 text-green-400 mt-1" />
                    <div>
                      <p className="text-sm mb-2">✨ ทำได้ดีมาก!</p>
                      <ul className="text-sm text-white/60 space-y-1">
                        <li>• ยอดขายวันนี้ทะลุเป้า 120% (+฿188K)</li>
                        <li>• Customer Satisfaction เพิ่มขึ้น +0.5 คะแนน</li>
                        <li>• Wait Time ลดลง 20% จากการปรับกะพนักงาน</li>
                      </ul>
                    </div>
                  </div>
                </div>

                <div className="p-4 bg-white/5 rounded-lg border border-white/10">
                  <div className="flex items-start gap-3">
                    <AlertCircle className="w-5 h-5 text-yellow-400 mt-1" />
                    <div>
                      <p className="text-sm mb-2">⚠️ ควรปรับปรุง</p>
                      <ul className="text-sm text-white/60 space-y-1">
                        <li>
                          • ช่วง 14:00-16:00 มีโต๊ะว่าง 60% → ควรทำโปรโมชั่น
                        </li>
                        <li>
                          • มีลูกค้า At-risk 23 คน → ส่ง Win-back campaign
                        </li>
                        <li>
                          • เมนู Steak ขายดีแต่กำไรต่ำ → แนะนำปรับราคา +10%
                        </li>
                      </ul>
                    </div>
                  </div>
                </div>

                <div className="p-4 bg-white/5 rounded-lg border border-white/10">
                  <div className="flex items-start gap-3">
                    <Target className="w-5 h-5 text-blue-400 mt-1" />
                    <div>
                      <p className="text-sm mb-2">🎯 แนะนำวันพรุ่งนี้</p>
                      <ul className="text-sm text-white/60 space-y-1">
                        <li>• คาดการณ์ยอดขาย: ฿1.25M-฿1.35M</li>
                        <li>
                          • ต้องการพนักงาน: 18 คน (เพิ่ม 2 คน ช่วง 12:00-14:00)
                        </li>
                        <li>
                          • แนะนำเตรียม VIP Table 3 โต๊ะ สำหรับลูกค้าประจำ
                        </li>
                      </ul>
                    </div>
                  </div>
                </div>
              </div>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
}

export default AdminDashboardPage;
